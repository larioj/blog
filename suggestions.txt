Suggestions
---

### Model
trait Operation
case class Install(uri: Uri) extends Operation
case class UniverseInstall(pd: PackageDefinition) extends Operation
case object Unistall extends Operation

OperationFailure: ???

### Producer
trait AddResult
case object Created
case object AlreadyExists

trait ProducerView {
	def add: (pc: PC, op: Operation): AddResult
}

### Reader
case class Status(op: Option[Operation], failure: Option[OperationFailure])
trait ReaderView {
	def viewInstallQueueStatus(): Map[PC, Status]
}


### Processor
case class OperationInfo: (pc: PC, op: Operation, failure: Option[OperationFailure])
trait ProcessorView {
	def nextOperation(): OperationInfo
	def failure(pc: PC, failure: OperationFailure)
	def success(pc: PC)
}
